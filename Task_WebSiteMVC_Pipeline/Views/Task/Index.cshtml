@using Task_WebSiteMVC_Pipeline.Domain.Enum;
@{
    ViewData["Title"] = "Home Page";
}

<h4 class="mb-3 text-muted">
    Создать задачу
</h4>
    <form id="createTaskForm">
        <div class="mb-3">
            <label class="form-label">
                Название задачи
            </label>
            <input class="form-control" type="text" name="name"/>
        </div>
        <label class="form-label">
            Период выполнения задачи
        </label>
    <select class="form-select mb-3" name="type" asp-items="Html.GetEnumSelectList<Task_TimeSpend>()"></select>
        <div class="mb-3">
            <label class="form-label">
                Описание задачи
            </label>
            <textarea name="description" type="text" class="form-control" rows="3"></textarea>
        </div>
    <button id="createTask" class="btn btn-secondary">Добавить задачу</button>
    </form>

    <br />

    <div class="row">
        <div class="form-group col-md-6">
            <label class="col-form-label">
                Название
            </label>
        <input name="nameTask" type="text" class="form-control" />
        </div>
    <div class="form-group col-md-6">
        <label class="col-form-label">
            Срок выполнения задачи
        </label>
        <select id="timeSpendSearch" class="form-control mb-3" asp-items="Html.GetEnumSelectList<Task_TimeSpend>()"></select>
    </div>
    </div>

    <br />

    <div class="mb-3">
    <table class="table table-dark table-hover" id="taskTableId">
        <thead>
            <tr>
                <th>
                    Название
                </th>
            <th>
                Длительность
            </th>
            <th>
                Описание
            </th>
            <th>
                Готовность 
            </th>
            <th>
                Действие
            </th>
            </tr>
        </thead>
        <tbody>

        </tbody>
    </table>
</div>

    @section Scripts{
    <script type="text/javascript" src="https://cdn.datatables.net/1.13.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script>

        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'btn btn-success',
            },
            buttonsStyling: false
        })

        let dataTable = $('#taskTableId').DataTable({
                info: true,
                serverSide: true,
                searching: false,
                paging: false,
                sorting: false,
                ajax:{
                url: "@Url.Action("TaskHandler")",
                    method: 'POST',
                    data: model
                },
                columns:[
                    { data: 'name' },
                    { data: 'type' },
                    { data: 'description' },
                    { data: 'isDone' },
                    {
                        data: null,
                        sortable: false,
                        render: function(data, type){
                            return '<button class="btn btn-success btn-sm center-block">Выполнить</button>'
                        }
                    }
                ],
                createdRow: function(nRow, data){

                    var heandlerComplete = function(){
                    swalWithBootstrapButtons.fire({
                        title: 'Вы собираетесь завершить задачу?',
                        icon: 'warning',
                        confirmButtonText: 'Да',
                        reverseButtons: true
                    }).then((result) => {
                        if (result.isConfirmed) {
                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("CloseTask")',
                                data: {id: data.id},
                                success: function (response) {
                                    Swal.fire({
                                        title: "Info",
                                        text: response.description,
                                        icon: 'success',
                                        confirmButtonText: "Ok"

                                    })
                                    dataTable.draw();
                                },
                                error: function (response) {
                                    Swal.fire({
                                        title: "Info",
                                        text: response.responseJSON.description,
                                        icon: 'error',
                                        confirmButtonText: "Ok"

                                    })
                                }
                            })
                            
                        }
                    })
                    }

                for (var i = 0; i < dataTable.columns().header().length - 1; i++)
                {
                    $('td button', nRow).eq(i).css('cursor', 'pointer');
                    $('td', nRow).eq(i).on('click', null);
                }
                $('td button', nRow).on('click', heandlerComplete);
                }
            });

            function model(){
                return{
                Name: $('input[name="nameTask"]').val(),
                TimeSpend: $('#timeSpendSearch option:selected').val()
                }
            }

        $('input[name="nameTask"]').on('change', function () {
            dataTable.draw();
        })
        $('#timeSpendSearch').on('change', function () {
            dataTable.draw();
        })
        $('#createTask').on('click', function (e) {
                e.preventDefault();
                $.ajax({
                type:'POST',
                url: '@Url.Action("Create", "Task")',
                data: $('#createTaskForm').serialize(),
                success: function(response){
                    Swal.fire({
                        title: "Info",
                        text: response.description,
                        icon: 'success',
                        confirmButtonText: "Ok"

                    })
                },
                error: function(response)
                {
                    Swal.fire({
                        title: "Info",
                        text: response.responseJSON.description,
                        icon: 'error',
                        confirmButtonText: "Ok"

                    })
                }
                })
            });
        </script>
    }
